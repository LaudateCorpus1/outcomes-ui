#! /usr/bin/env groovy

def msg = "`${env.JOB_NAME}` Build ${env.BUILD_NUMBER}:\n${env.BUILD_URL}"

pipeline {
  agent { label 'docker' }

  environment {
    NPM_PRIVATE_REGISTRY = '//instructure.jfrog.io/instructure/api/npm/internal-npm/'
    NPM_PRIVATE_SCOPE    = 'inst'
    NPM_PRIVATE_USERNAME = 'jenkins-ro'
    NPM_PRIVATE_EMAIL    = 'jenkins@instructure.com'
    AWS_ROLE_ARN         = 'arn:aws:iam::307761260553:role/translations-jenkins'
  }

  stages {
    stage('Pre-Build Cleanup') {
      steps {
        script {
          try {
            sh 'docker rm translations'
          } catch (err) {
            echo 'No translations containers to remove'
          }
        }
      }
    }
    stage('Sync Translations') {
      steps {
        withCredentials(
        [
          sshUserPrivateKey(credentialsId: '44aa91d6-ab24-498a-b2b4-911bcb17cc35', keyFileVariable: 'SSH_KEY_FILE', usernameVariable: 'SSH_USERNAME'),
          string(credentialsId: 'NPM_PRIVATE_PASSWORD', variable: 'NPM_PRIVATE_PASSWORD'),
          usernamePassword(credentialsId: 'JIRA_BASIC_AUTH', usernameVariable: 'JIRA_USERNAME', passwordVariable: 'JIRA_PASSWORD')
        ],
        ) {
          // Build UI Container
          sh 'docker build -f Dockerfile --tag ui:latest .'

          // execute the sync command to push and pull catalogs.
          sh '''
          docker run \
              -v "$SSH_KEY_FILE":/usr/src/sshkeyfile \
              --env SSH_USERNAME \
              --env AWS_ACCESS_KEY_ID \
              --env AWS_SECRET_ACCESS_KEY \
              --env NPM_PRIVATE_SCOPE \
              --env NPM_PRIVATE_REGISTRY \
              --env NPM_PRIVATE_PASSWORD \
              --env NPM_PRIVATE_USERNAME \
              --env NPM_PRIVATE_EMAIL \
              --env JIRA_PASSWORD \
              --env JIRA_USERNAME \
              -u root \
            ui:latest bash -c bin/sync-translations
          '''
        }
      }

      post {
        success {
          slackSend channel: '#outcomes', color: 'good', message: "Outcomes Sync Translations Succeeded: $msg"
        }
        failure {
          slackSend channel: '#outcomes', color: 'bad', message: "Outcomes Sync Translations Failed: $msg"
        }
      }
    }
  }
}
